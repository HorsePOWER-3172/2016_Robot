// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3172.RalphTheWonderLlamaWPIOnly.subsystems;


import org.usfirst.frc3172.RalphTheWonderLlamaWPIOnly.RobotMap;
import org.usfirst.frc3172.RalphTheWonderLlamaWPIOnly.commands.pressurecannon;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Cannon extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController ball2 = RobotMap.cannonball2;
    private final SpeedController ball1 = RobotMap.cannonball1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    double enhancer = .4;
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    
    public void pressurefire(Joystick Gamepad) {
    	if (Gamepad.getRawAxis(3) > 0) {
    		ball1.set(-(Gamepad.getRawAxis(3) * enhancer));
        	ball2.set(Gamepad.getRawAxis(3) * enhancer);
        	
        	Gamepad.setRumble(Joystick.RumbleType.kRightRumble, (float) Gamepad.getRawAxis(3));
    	} else if (Gamepad.getRawAxis(2) == 0 ) { // if neither are pulled, stop
    		ball1.set(0);
        	ball2.set(0);
        	Gamepad.setRumble(Joystick.RumbleType.kRightRumble, 0);
    	}
    	
    }
    public void pressurechamber(Joystick Gamepad) {
    	if (Gamepad.getRawAxis(2) > 0) {
    		 if (Gamepad.getRawAxis(3) != 0 ) { //if both are pulled, stop
    	    		ball1.set(0);
    	        	ball2.set(0);
    	        	Gamepad.setRumble(Joystick.RumbleType.kRightRumble, 0);
    	    	} else {
    		ball1.set(Gamepad.getRawAxis(2) * enhancer);
        	ball2.set(-(Gamepad.getRawAxis(2) * enhancer));
        	Gamepad.setRumble(Joystick.RumbleType.kRightRumble, (float) Gamepad.getRawAxis(2));
    	    	}
    	}
    	
    }
    
    
    public void fire(Joystick Gamepad) {
    ball2.set(enhancer);
    ball1.set(-enhancer);
    Gamepad.setRumble(Joystick.RumbleType.kLeftRumble, (float) enhancer);
    }
    public void chamber(Joystick Gamepad) {
    	ball2.set(-enhancer);
    	ball1.set(enhancer);
    	Gamepad.setRumble(Joystick.RumbleType.kLeftRumble, (float) enhancer);
    }
    
    public void stop(Joystick Gamepad) {
    	ball2.set(0);
    	ball1.set(0);
    	Gamepad.setRumble(Joystick.RumbleType.kLeftRumble, 0);
    }

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new pressurecannon());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
}

